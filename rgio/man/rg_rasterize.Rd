% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rasterize.R
\name{rg_rasterize}
\alias{rg_rasterize}
\title{Rasterize Vector Files}
\usage{
rg_rasterize(
  files,
  outdir,
  field = "class",
  res = c(0.00025, 0.00025),
  crs = "EPSG:4326",
  nodata = 0L,
  co = c("COMPRESS=ZSTD", "TILED=YES", "BIGTIFF=YES"),
  threads = 0L
)
}
\arguments{
\item{files}{Character vector of input vector file paths}

\item{outdir}{Output directory for rasterized GeoTIFF files}

\item{field}{Character string specifying the field/attribute to rasterize (default: "class")}

\item{res}{Numeric vector of length 2 specifying x and y resolution (default: c(0.00025, 0.00025))}

\item{crs}{Character string specifying the coordinate reference system (default: "EPSG:4326")}

\item{nodata}{Integer or numeric value for nodata pixels (default: 0L)}

\item{co}{Character vector of GDAL creation options (default: `c("COMPRESS=ZSTD", "TILED=YES", "BIGTIFF=YES")`)}

\item{threads}{Integer specifying number of threads (0 = auto, default: 0L)}
}
\value{
Character vector of output file paths
}
\description{
Convert one or many vector files (shapefiles, GeoJSON, etc.) to GeoTIFF tiles in parallel.
This function wraps GDAL's rasterization capabilities with multi-threaded processing.
}
\examples{
\dontrun{
# Rasterize a single shapefile
rg_rasterize("input.shp", "output_dir", field = "landcover")

# Rasterize multiple files in parallel
files <- c("file1.shp", "file2.shp", "file3.shp")
rg_rasterize(files, "output_dir", threads = 4)
}

}
